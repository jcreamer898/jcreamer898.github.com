{"version":3,"sources":["webpack:///./src/components/icons/website.tsx","webpack:///./src/templates/author.tsx"],"names":["Website","Object","core_browser_esm","xmlns","viewBox","style","height","d","stroke","strokeLinejoin","strokeMiterlimit","fill","HiddenMobile","name","styles","AuthorMeta","styled_base_browser_esm","target","AuthorBio","Bull","AuthorProfileBioImage","pageQuery","Author","props","author","data","authorYaml","edges","allMarkdownRemark","filter","edge","node","frontmatter","draft","id","totalCount","length","layouts","Helmet_default","a","lang","config","title","content","bio","property","siteUrl","pathContext","slug","twitter","split","Wrapper","className","css","css_browser_esm","outer","SiteHeader","backgroundImage","profile_image","childImageSharp","fluid","src","inner","SiteNav","isHome","shared","AuthorProfileImage","avatar","alt","location","website","SocialLink","href","rel","facebook","SiteMain","PostFeed","PostFeedRaise","map","_ref","PostCard","key","fields","post","Footer"],"mappings":"sOAceA,EAXW,kBACxBC,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAM,6BAA6BC,QAAQ,YAAYC,MAAO,CAAEC,OAAQ,WAC3EL,OAAAC,EAAA,EAAAD,CAAA,QACEM,EAAE,wQACFC,OAAO,OACPC,eAAe,QACfC,iBAAiB,KACjBC,KAAK,4DCmBX,IAAMC,EAAY,CAAAC,KAAA,SAAAC,OAAA,2CAMZC,EAAad,OAAAe,EAAA,EAAAf,CAAA,OAAHgB,OAAA,YAAGhB,CAAH,CAAAY,KAAA,UAAAC,OAAA,mJAWVI,EAAYjB,OAAAe,EAAA,EAAAf,CAAA,MAAHgB,OAAA,YAAGhB,CAAH,CAAAY,KAAA,UAAAC,OAAA,oJAYTK,EAAOlB,OAAAe,EAAA,EAAAf,CAAA,QAAHgB,OAAA,YAAGhB,CAAH,CAAAY,KAAA,UAAAC,OAAA,oDAMJM,EAAqB,CAAAP,KAAA,UAAAC,OAAA,mHAuMdO,GAFEC,UAnJ+B,SAAAC,GAC5C,IAAMC,EAASD,EAAME,KAAKC,WAEpBC,EAAQJ,EAAME,KAAKG,kBAAkBD,MAAME,OAC/C,SAAAC,GAGE,OAFiD,IAAhCA,EAAKC,KAAKC,YAAYC,OAErBH,EAAKC,KAAKC,YAAYR,QAAUM,EAAKC,KAAKC,YAAYR,OAAOU,KAAOV,EAAOU,KAG3FC,EAAaR,EAAMS,OAEzB,OACEnC,OAAAC,EAAA,EAAAD,CAACoC,EAAA,EAAD,KACEpC,OAAAC,EAAA,EAAAD,CAACqC,EAAAC,EAAD,KACEtC,OAAAC,EAAA,EAAAD,CAAA,QAAMuC,KAAMC,IAAOD,OACnBvC,OAAAC,EAAA,EAAAD,CAAA,aACGuB,EAAOU,GADV,MACiBO,IAAOC,OAExBzC,OAAAC,EAAA,EAAAD,CAAA,QAAMY,KAAK,cAAc8B,QAASnB,EAAOoB,MACzC3C,OAAAC,EAAA,EAAAD,CAAA,QAAM4C,SAAS,eAAeF,QAASF,IAAOC,QAC9CzC,OAAAC,EAAA,EAAAD,CAAA,QAAM4C,SAAS,UAAUF,QAAQ,YACjC1C,OAAAC,EAAA,EAAAD,CAAA,QAAM4C,SAAS,WAAWF,QAAYnB,EAAOU,GAAZ,MAAoBO,IAAOC,QAC5DzC,OAAAC,EAAA,EAAAD,CAAA,QAAM4C,SAAS,SAASF,QAASF,IAAOK,QAAUvB,EAAMwB,YAAYC,OACpE/C,OAAAC,EAAA,EAAAD,CAAA,QAAM4C,SAAS,oBAAoBF,QAAQ,mCAC3C1C,OAAAC,EAAA,EAAAD,CAAA,QAAM4C,SAAS,iBAAiBF,QAAQ,mCACxC1C,OAAAC,EAAA,EAAAD,CAAA,QAAMY,KAAK,eAAe8B,QAAQ,YAClC1C,OAAAC,EAAA,EAAAD,CAAA,QAAMY,KAAK,gBAAgB8B,QAAYnB,EAAOU,GAAZ,MAAoBO,IAAOC,QAC7DzC,OAAAC,EAAA,EAAAD,CAAA,QAAMY,KAAK,cAAc8B,QAASF,IAAOK,QAAUvB,EAAMwB,YAAYC,OACpEP,IAAOQ,SACNhD,OAAAC,EAAA,EAAAD,CAAA,QACEY,KAAK,eACL8B,QAAO,IAAMF,IAAOQ,QAAQC,MAAM,wBAAwB,KAG7DT,IAAOQ,SACNhD,OAAAC,EAAA,EAAAD,CAAA,QACEY,KAAK,kBACL8B,QAAO,IAAMF,IAAOQ,QAAQC,MAAM,wBAAwB,MAIhEjD,OAAAC,EAAA,EAAAD,CAACkD,EAAA,EAAD,KACElD,OAAAC,EAAA,EAAAD,CAAA,UACEmD,UAAU,WACVC,IAAGpD,OAAAqD,EAAA,EAAArD,CAAE,CAACsD,IAAOC,MACbnD,MAAO,CAELoD,gBAAiBjC,EAAOkC,cAAP,OACRlC,EAAOkC,cAAcC,gBAAgBC,MAAMC,IADnC,IAEf,KAGJ5D,OAAAC,EAAA,EAAAD,CAAA,OAAKoD,IAAKS,KACR7D,OAAAC,EAAA,EAAAD,CAAC8D,EAAA,EAAD,CAASC,QAAQ,IACjB/D,OAAAC,EAAA,EAAAD,CAACgE,EAAA,EAAD,KACEhE,OAAAC,EAAA,EAAAD,CAAA,OACEoD,IAAGpD,OAAAqD,EAAA,EAAArD,CAAE,CAACiE,IAAoB9C,IAC1ByC,IAAKtC,EAAME,KAAKC,WAAWyC,OAAOR,gBAAgBC,MAAMC,IACxDO,IAAK5C,EAAOU,KAEdjC,OAAAC,EAAA,EAAAD,CAACgE,EAAA,EAAD,KAAYzC,EAAOU,IAClBV,EAAOoB,KAAO3C,OAAAC,EAAA,EAAAD,CAACiB,EAAD,KAAYM,EAAOoB,KAClC3C,OAAAC,EAAA,EAAAD,CAACc,EAAD,KACGS,EAAO6C,UACNpE,OAAAC,EAAA,EAAAD,CAAA,OAAKoD,IAAKzC,GACPY,EAAO6C,SADV,IACoBpE,OAAAC,EAAA,EAAAD,CAACkB,EAAD,WAGtBlB,OAAAC,EAAA,EAAAD,CAAA,OAAKoD,IAAKzC,GACPuB,EAAa,GAAQA,EAArB,SACe,IAAfA,GAAoB,SACL,IAAfA,GAAoB,WAHvB,IAGmClC,OAAAC,EAAA,EAAAD,CAACkB,EAAD,WAElCK,EAAO8C,SACNrE,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,KACEmD,UAAU,iBACVC,IAAKkB,IACLC,KAAMhD,EAAO8C,QACb5B,MAAM,UACNzB,OAAO,SACPwD,IAAI,uBAEJxE,OAAAC,EAAA,EAAAD,CAACqE,EAAD,QAIL9C,EAAOyB,SACNhD,OAAAC,EAAA,EAAAD,CAAA,KACEmD,UAAU,iBACVC,IAAKkB,IACLC,KAAI,uBAAyBhD,EAAOyB,QACpCP,MAAM,UACNzB,OAAO,SACPwD,IAAI,uBAEJxE,OAAAC,EAAA,EAAAD,CAACgD,EAAA,EAAD,OAGHzB,EAAOkD,UACNzE,OAAAC,EAAA,EAAAD,CAAA,KACEmD,UAAU,iBACVC,IAAKkB,IACLC,KAAI,4BAA8BhD,EAAOkD,SACzChC,MAAM,WACNzB,OAAO,SACPwD,IAAI,uBAEJxE,OAAAC,EAAA,EAAAD,CAACyE,EAAA,EAAD,WAuBZzE,OAAAC,EAAA,EAAAD,CAAA,QAAMiC,GAAG,YAAYmB,IAAGpD,OAAAqD,EAAA,EAAArD,CAAE,CAAC0E,IAAUpB,OACnCtD,OAAAC,EAAA,EAAAD,CAAA,OAAKoD,IAAKS,KACR7D,OAAAC,EAAA,EAAAD,CAAA,OAAKoD,IAAGpD,OAAAqD,EAAA,EAAArD,CAAE,CAAC2E,IAAUC,OAClBlD,EAAMmD,IAAI,SAAAC,GAAc,IAAXhD,EAAWgD,EAAXhD,KACZ,OAAO9B,OAAAC,EAAA,EAAAD,CAAC+E,EAAA,EAAD,CAAUC,IAAKlD,EAAKmD,OAAOlC,KAAMmC,KAAMpD,SAKtD9B,OAAAC,EAAA,EAAAD,CAACmF,EAAA,EAAD,SAQc","file":"component---src-templates-author-tsx-143a41dce3567c8f924a.js","sourcesContent":["// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Website: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{ height: '1.6rem' }}>\n    <path\n      d=\"M23.5 11.957c0 6.375-5.163 11.544-11.532 11.544C5.599 23.5.5 18.125.5 11.75.5 5.542 5.37.758 11.505.511l.5-.011C18.374.5 23.5 5.582 23.5 11.957zM11.505.511c-6 6.5-6 14.98 0 22.98m1-22.98c6 6.5 6 14.977 0 22.977M2 17.479h20.063m-19.657-12h19.062m-20.968 6h22.938\"\n      stroke=\"#fff\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit=\"10\"\n      fill=\"none\"\n    />\n  </svg>\n);\nexport default Website;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  AuthorProfileImage,\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteTitle,\n  SiteMain,\n  SocialLink,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport Facebook from '../components/icons/facebook';\nimport Helmet from 'react-helmet';\nimport config from '../website-config';\nimport Website from '../components/icons/website';\nimport Twitter from '../components/icons/twitter';\n\nconst HiddenMobile = css`\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst AuthorMeta = styled.div`\n  z-index: 10;\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 0 10px 0;\n  font-family: Georgia, serif;\n  font-style: italic;\n`;\n\nconst AuthorBio = styled.h2`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 5px 0 10px 0;\n  max-width: 600px;\n  font-size: 2rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nconst Bull = styled.span`\n  display: inline-block;\n  margin: 0 12px;\n  opacity: 0.5;\n`;\n\nconst AuthorProfileBioImage = css`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 0 0 20px 0;\n  width: 100px;\n  height: 100px;\n  box-shadow: rgba(255, 255, 255, 0.1) 0 0 0 6px;\n`;\n\ninterface AuthorTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  pageContext: {\n    author: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    authorYaml: {\n      id: string;\n      website?: string;\n      twitter?: string;\n      facebook?: string;\n      location?: string;\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      profile_image?: {\n        childImageSharp: {\n          fluid: any;\n        };\n      };\n      bio?: string;\n      avatar: {\n        childImageSharp: {\n          fluid: any;\n        };\n      };\n    };\n  };\n}\n\nconst Author: React.FC<AuthorTemplateProps> = props => {\n  const author = props.data.authorYaml;\n\n  const edges = props.data.allMarkdownRemark.edges.filter(\n    edge => {\n      const isDraft = (edge.node.frontmatter.draft !== true ||\n        process.env.NODE_ENV === 'development');\n      return isDraft && edge.node.frontmatter.author && edge.node.frontmatter.author.id === author.id;\n    }\n  );\n  const totalCount = edges.length;\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {author.id} - {config.title}\n        </title>\n        <meta name=\"description\" content={author.bio} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"profile\" />\n        <meta property=\"og:title\" content={`${author.id} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        <meta property=\"article:publisher\" content=\"https://www.facebook.com/ghost\" />\n        <meta property=\"article:author\" content=\"https://www.facebook.com/ghost\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={`${author.id} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header\n          className=\"no-cover\"\n          css={[outer, SiteHeader]}\n          style={{\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            backgroundImage: author.profile_image ?\n              `url(${author.profile_image.childImageSharp.fluid.src})` :\n              '',\n          }}\n        >\n          <div css={inner}>\n            <SiteNav isHome={false} />\n            <SiteHeaderContent>\n              <img\n                css={[AuthorProfileImage, AuthorProfileBioImage]}\n                src={props.data.authorYaml.avatar.childImageSharp.fluid.src}\n                alt={author.id}\n              />\n              <SiteTitle>{author.id}</SiteTitle>\n              {author.bio && <AuthorBio>{author.bio}</AuthorBio>}\n              <AuthorMeta>\n                {author.location && (\n                  <div css={HiddenMobile}>\n                    {author.location} <Bull>&bull;</Bull>\n                  </div>\n                )}\n                <div css={HiddenMobile}>\n                  {totalCount > 1 && `${totalCount} posts`}\n                  {totalCount === 1 && '1 post'}\n                  {totalCount === 0 && 'No posts'} <Bull>•</Bull>\n                </div>\n                {author.website && (\n                  <div>\n                    <a\n                      className=\"social-link-wb\"\n                      css={SocialLink}\n                      href={author.website}\n                      title=\"Website\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <Website />\n                    </a>\n                  </div>\n                )}\n                {author.twitter && (\n                  <a\n                    className=\"social-link-tw\"\n                    css={SocialLink}\n                    href={`https://twitter.com/${author.twitter}`}\n                    title=\"Twitter\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Twitter />\n                  </a>\n                )}\n                {author.facebook && (\n                  <a\n                    className=\"social-link-fb\"\n                    css={SocialLink}\n                    href={`https://www.facebook.com/${author.facebook}`}\n                    title=\"Facebook\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Facebook />\n                  </a>\n                )}\n                {/* TODO: RSS for author */}\n                {/* <a\n                  css={SocialLink} className=\"social-link-rss\"\n                  href=\"https://feedly.com/i/subscription/feed/https://demo.ghost.io/author/ghost/rss/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    style={{ height: '1.9rem' }}\n                  >\n                    <circle cx=\"6.18\" cy=\"17.82\" r=\"2.18\" />\n                    <path d=\"M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z\" />\n                  </svg>\n                </a> */}\n              </AuthorMeta>\n            </SiteHeaderContent>\n          </div>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {edges.map(({ node }) => {\n                return <PostCard key={node.fields.slug} post={node} />;\n              })}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Author;\n\nexport const pageQuery = graphql`\n  query($author: String) {\n    authorYaml(id: { eq: $author }) {\n      id\n      website\n      twitter\n      bio\n      facebook\n      location\n      profile_image {\n        childImageSharp {\n          fluid(maxWidth: 3720) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      avatar {\n        childImageSharp {\n          fluid(maxWidth: 200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } },\n      sort: { fields: [frontmatter___date], order: DESC },\n      limit: 2000,\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            draft\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}